<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.sq26.experience">

    <!--日历数据-->
    <!--允许程序读取和写入用户的日历信息-->
    <uses-permission android:name="android.permission.READ_CALENDAR" />
    <uses-permission android:name="android.permission.WRITE_CALENDAR" />
    <!-- 允许程序访问摄像头,摄像头不是必须的 -->
    <uses-permission
        android:name="android.permission.CAMERA"
        android:required="false" />
    <!--联系人-->
    <!--允许程序读取和写入联系人通讯录信息-->
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />
    <!--  允许程序访问设备帐户  -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <!--位置-->
    <!--    允许程序通过GPS芯片接收卫星的定位信息-->
    <uses-permission-sdk-23 android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!--    麦克风-->
    <!--    允许程序录制声音通过手机或耳机的麦克-->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <!--    电话-->
    <!--    允许程序访问电话状态-->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!--    允许程序从非系统拨号器里拨打电话-->
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <!--    读取和写入通话记录-->
    <uses-permission android:name="android.permission.READ_CALL_LOG" />
    <uses-permission android:name="android.permission.WRITE_CALL_LOG" />
    <!--    允许一个应用程序添加语音邮件系统-->
    <uses-permission android:name="android.permission.ADD_VOICEMAIL" />
    <!--    允许程序使用SIP视频服务-->
    <uses-permission android:name="android.permission.USE_SIP" />
    <!--    允许您的应用读取设备中存储的电话号码-->
    <uses-permission android:name="android.permission.READ_PHONE_NUMBERS" />
    <!--    允许您的应用通过编程方式接听呼入电话。要在您的应用中处理呼入电话，您可以使用 acceptRingingCall() 函数。-->
    <uses-permission android:name="android.permission.ANSWER_PHONE_CALLS" />
    <!--    传感器-->
    <!--   允许该应用存取监测您身体状况的传感器所收集的数据，例如您的心率。-->
    <uses-permission android:name="android.permission.BODY_SENSORS" />
    <!--    短信-->
    <!--   允许程序发送短信-->
    <uses-permission android:name="android.permission.SEND_SMS" />
    <!--   允许程序接收短信-->
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <!--   允许程序读取短信内容-->
    <uses-permission android:name="android.permission.READ_SMS" />
    <!--   允许程序接收WAP PUSH信息-->
    <uses-permission android:name="android.permission.RECEIVE_WAP_PUSH" />
    <!--   允许程序接收彩信-->
    <uses-permission android:name="android.permission.RECEIVE_MMS" />
    <!--    储存-->
    <!--   程序可以读取设备外部存储空间-->
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <uses-permission-sdk-23 android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission-sdk-23 android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />
    <!-- 允许程序在手机屏幕关闭后后台进程仍然运行 -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- 允许程序开机自动运行 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- 允许程序运行工厂测试模式 -->
    <uses-permission-sdk-23 android:name="android.permission.FACTORY_TEST" />
    <!-- 允许程序安装应用 -->
    <uses-permission-sdk-23 android:name="android.permission.INSTALL_PACKAGES" />
    <!-- 允许程序读取帧缓存用于屏幕截图 -->
    <uses-permission-sdk-23 android:name="android.permission.READ_FRAME_BUFFER" />
    <!-- 允许程序读取系统底层日志 -->
    <uses-permission-sdk-23 android:name="android.permission.READ_LOGS" />
    <!-- 允许程序申请安装apk -->
    <uses-permission-sdk-23 android:name="android.permission.REQUEST_INSTALL_PACKAGES" />
    <!-- 允许程序获取所有的app 信息 -->
    <uses-permission-sdk-23 android:name="android.permission.QUERY_ALL_PACKAGES" />

    <!--
            android:requestLegacyExternalStorage = true:用于给Android10设备停用强制分区储存
            android:allowBackup="true":启动系统备份功能
        -->
    <application
        android:name=".app.MyApp"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:manageSpaceActivity=".ui.activity.StorageManagementActivity"
        android:networkSecurityConfig="@xml/network_security_config"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        tools:targetApi="n">
        <activity
            android:name="com.sq26.experience.ui.navigation.StartActivity"
            android:exported="true">
            <intent-filter>
                <!-- 应用程序入口 -->
                <action android:name="android.intent.action.MAIN" />
                <!-- 表示activity应该被列入系统的启动器(launcher)(允许用户启动它)。Launcher是安卓系统中的桌面启动器，是桌面UI的统称。 -->
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!--   时间微件的设置页面    -->
        <activity
            android:name="com.sq26.experience.ui.activity.WallpaperWidgetActivity"
            android:exported="false"
            android:process=":widget">
            <intent-filter>
                <action android:name="android.intent.action.APPWIDGET_CONFIGURE" />
            </intent-filter>
        </activity>
        <activity android:name="com.sq26.experience.ui.activity.NotificationActivity" />
        <activity
            android:name="com.sq26.experience.ui.activity.file.FileImageActivity"
            android:theme="@style/FileImageAppTheme" />
        <activity
            android:name=".ui.activity.file.FileImageDirectoryActivity"
            android:theme="@style/FileImageAppTheme" />
        <activity android:name=".ui.activity.MotionLayoutActivity" />
        <activity android:name=".ui.activity.NavigationDemoActivity" />
        <activity android:name=".ui.activity.DataBindingActivity" />
        <activity android:name=".ui.activity.KotlinActivity" />
        <activity android:name=".ui.activity.AppManagementActivity" />
        <activity android:name=".ui.activity.WiFiDirectActivity" />
        <activity android:name=".ui.activity.PagingActivity" />
        <activity android:name="com.sq26.experience.ui.activity.WorkManagerActivity" />
        <activity
            android:name=".ui.activity.NavigationActivity"
            android:exported="false">
            <!--使用隐式深层链接必须将导航图添加到指向现有导航图的 Activity-->
            <!--构建项目时，Navigation 组件会将 <nav-graph> 元素替换为生成的 <intent-filter> 元素，以匹配导航图中的所有深层链接。-->
            <nav-graph android:value="@navigation/nav_navigation_graph" />
        </activity>
        <activity android:name=".ui.activity.file.FileImageListActivity" />
        <activity
            android:name=".ui.util.PdfActivity"
            android:exported="true">
            <!-- ignore忽略app链接错误 -->
            <intent-filter tools:ignore="AppLinkUrlError">
                <!-- 设置为,显示数据给用户 -->
                <action android:name="android.intent.action.VIEW" />
                <!-- 分类设置匹配所有 -->
                <category android:name="android.intent.category.DEFAULT" />
                <!-- 数据设置为匹配Pdf文档 -->
                <data android:mimeType="application/pdf" />
            </intent-filter>
        </activity>
        <!-- 文件管理首页的activity(计划和文件操作页合并) -->
        <activity android:name=".ui.activity.file.FileHomeActivity" />

        <!-- 跨进程通讯演示操作页 -->
        <activity android:name=".ui.activity.AIDLActivity" />

        <!-- 网络请求演示操作页 -->
        <activity android:name=".ui.activity.NetworkActivity" />

        <!-- 加密解密演示操作页 -->
        <activity android:name=".ui.activity.EncryptionActivity" />

        <!-- RecyclerView控件演示操作页 -->
        <activity android:name=".ui.activity.RecyclerViewActivity" />

        <!-- 下载管理演示操作页 -->
        <activity android:name=".ui.activity.DownloadManagementActivity" />

        <!-- 上拉刷新下拉加载更多的自定义控件 -->
        <activity android:name=".ui.activity.PullToRefreshActivity" />

        <!-- 可以打开文本文件的activity -->
        <activity
            android:name=".ui.util.TextActivity"
            android:exported="true">

            <!-- ignore忽略app链接错误 -->
            <intent-filter tools:ignore="AppLinkUrlError">


                <!-- 设置为,显示数据给用户 -->
                <action android:name="android.intent.action.VIEW" />

                <!-- 分类设置匹配所有 -->
                <category android:name="android.intent.category.DEFAULT" />

                <!-- 数据设置为匹配纯文本 -->
                <data android:mimeType="text/plain" />
            </intent-filter>
        </activity>

        <!-- 图片选择页 -->
        <activity android:name=".ui.util.SelectImageActivity" />

        <!-- 媒体操作页 -->
        <activity android:name=".ui.activity.MediaOperatingActivity" />

        <!-- 文件操作页 -->
        <activity android:name=".ui.activity.file.FileOperateActivity" />

        <!-- 通知栏管理页 -->
        <activity android:name=".ui.activity.StatusBarActivity" />

        <!-- 相机页 -->
        <activity android:name=".ui.activity.CameraActivity" />

        <!-- 测试页 -->
        <activity android:name=".ui.activity.TestActivity" />

        <!-- 二维码识别页 -->
        <activity android:name=".ui.activity.ScanCodeActivity" />

        <!--        主页-->
        <activity
            android:name=".ui.activity.MainActivity"
            android:exported="true"
            android:theme="@style/HomeAppTheme">

        </activity>
        <!--    自定义储存管理-->
        <activity
            android:name="com.sq26.experience.ui.activity.StorageManagementActivity"
            android:exported="false"

            />

        <!--
                                下载服务
                                name :服务所在的位置
                                process:指定服务运行的进程
                            -->
        <service
            android:name=".util.network.download.DownloadService"
            android:process=":sq26" />

        <!--
                                跨进程通信服务
                                需要声明android:exported="true"，这样别的APP才能访问。
                            -->
        <service
            android:name=".service.AIDLService"
            android:exported="true"
            android:process=":aidl" />

        <!-- 通知栏快捷开关 (未研究完) -->
        <service
            android:name=".service.QuickSwitchService"
            android:exported="false"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
        </service>

        <!--
                                该provider用于本地文件访问
                                authorities：是该项目的包名+provider
                                grantUriPermissions：必须是true，表示授予 URI 临时访问权限
                                exported：必须是false
                                resource：中的@xml/file_paths是我们接下来要在资源文件目录下添加的文件
                            -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="com.sq26.experience.FileProvider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/file_paths" />
        </provider>

        <!--
                            时钟微件
                            <receiver> 元素需要 android:name 属性，该属性指定应用微件使用的 AppWidgetProvider。
                            <intent-filter> 元素必须包含一个具有 android:name 属性的 <action> 元素。
                                此属性指定 AppWidgetProvider 接受 ACTION_APPWIDGET_UPDATE 广播。
                                这是您必须明确声明的唯一一项广播。
                                AppWidgetManager 会根据需要自动将其他所有应用微件广播发送到 AppWidgetProvider。
                            <meta-data> 元素指定 AppWidgetProviderInfo 资源，并且需要以下属性：
                                android:name - 指定元数据名称。
                                    使用 android.appwidget.provider 将数据标识为 AppWidgetProviderInfo 描述符。
                                android:resource - 指定 AppWidgetProviderInfo 资源位置。
                            -->
        <receiver
            android:name="com.sq26.experience.ui.widget.WallpaperWidget"
            android:exported="false"
            android:process=":widget">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/clock_widget_info" />
        </receiver>

    </application>
</manifest>
